/* tslint:disable */
/* eslint-disable */
/**
 * однойкрови.рф
 * API сервиса однойкрови.рф для донороcства крови и помощи животным
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsUserRole } from './ModelsUserRole';
import {
    ModelsUserRoleFromJSON,
    ModelsUserRoleFromJSONTyped,
    ModelsUserRoleToJSON,
    ModelsUserRoleToJSONTyped,
} from './ModelsUserRole';

/**
 * 
 * @export
 * @interface ServicesUserRegistration
 */
export interface ServicesUserRegistration {
    /**
     * 
     * @type {boolean}
     * @memberof ServicesUserRegistration
     */
    consentPd: boolean;
    /**
     * 
     * @type {string}
     * @memberof ServicesUserRegistration
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof ServicesUserRegistration
     */
    fullName: string;
    /**
     * 
     * @type {number}
     * @memberof ServicesUserRegistration
     */
    locationId: number;
    /**
     * 
     * @type {string}
     * @memberof ServicesUserRegistration
     */
    phone: string;
    /**
     * 
     * @type {ModelsUserRole}
     * @memberof ServicesUserRegistration
     */
    role: ModelsUserRole;
}



/**
 * Check if a given object implements the ServicesUserRegistration interface.
 */
export function instanceOfServicesUserRegistration(value: object): value is ServicesUserRegistration {
    if (!('consentPd' in value) || value['consentPd'] === undefined) return false;
    if (!('fullName' in value) || value['fullName'] === undefined) return false;
    if (!('locationId' in value) || value['locationId'] === undefined) return false;
    if (!('phone' in value) || value['phone'] === undefined) return false;
    if (!('role' in value) || value['role'] === undefined) return false;
    return true;
}

export function ServicesUserRegistrationFromJSON(json: any): ServicesUserRegistration {
    return ServicesUserRegistrationFromJSONTyped(json, false);
}

export function ServicesUserRegistrationFromJSONTyped(json: any, ignoreDiscriminator: boolean): ServicesUserRegistration {
    if (json == null) {
        return json;
    }
    return {
        
        'consentPd': json['consentPd'],
        'email': json['email'] == null ? undefined : json['email'],
        'fullName': json['fullName'],
        'locationId': json['locationId'],
        'phone': json['phone'],
        'role': ModelsUserRoleFromJSON(json['role']),
    };
}

export function ServicesUserRegistrationToJSON(json: any): ServicesUserRegistration {
    return ServicesUserRegistrationToJSONTyped(json, false);
}

export function ServicesUserRegistrationToJSONTyped(value?: ServicesUserRegistration | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'consentPd': value['consentPd'],
        'email': value['email'],
        'fullName': value['fullName'],
        'locationId': value['locationId'],
        'phone': value['phone'],
        'role': ModelsUserRoleToJSON(value['role']),
    };
}


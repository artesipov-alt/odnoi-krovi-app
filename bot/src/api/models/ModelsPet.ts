/* tslint:disable */
/* eslint-disable */
/**
 * однойкрови.рф
 * API сервиса однойкрови.рф для донороcства крови и помощи животным
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsPetType } from './ModelsPetType';
import {
    ModelsPetTypeFromJSON,
    ModelsPetTypeFromJSONTyped,
    ModelsPetTypeToJSON,
    ModelsPetTypeToJSONTyped,
} from './ModelsPetType';
import type { ModelsGender } from './ModelsGender';
import {
    ModelsGenderFromJSON,
    ModelsGenderFromJSONTyped,
    ModelsGenderToJSON,
    ModelsGenderToJSONTyped,
} from './ModelsGender';
import type { ModelsLivingCondition } from './ModelsLivingCondition';
import {
    ModelsLivingConditionFromJSON,
    ModelsLivingConditionFromJSONTyped,
    ModelsLivingConditionToJSON,
    ModelsLivingConditionToJSONTyped,
} from './ModelsLivingCondition';

/**
 * 
 * @export
 * @interface ModelsPet
 */
export interface ModelsPet {
    /**
     * 
     * @type {number}
     * @memberof ModelsPet
     */
    ageMonths?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsPet
     */
    ageYears?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    bloodGroup?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    breed?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    chipNumber?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    dewormingDate?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    ectoparasiteDate?: string;
    /**
     * 
     * @type {ModelsGender}
     * @memberof ModelsPet
     */
    gender?: ModelsGender;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsPet
     */
    hasChip?: boolean;
    /**
     * 
     * @type {number}
     * @memberof ModelsPet
     */
    id?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsPet
     */
    isGuideDog?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsPet
     */
    isTherapist?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsPet
     */
    knowsBloodGroup?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    lastTransfusionDate?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsPet
     */
    latitude?: number;
    /**
     * 
     * @type {ModelsLivingCondition}
     * @memberof ModelsPet
     */
    livingCondition?: ModelsLivingCondition;
    /**
     * 
     * @type {number}
     * @memberof ModelsPet
     */
    longitude?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    name?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsPet
     */
    ownerId?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    photoUrl?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsPet
     */
    sterilized?: boolean;
    /**
     * 
     * @type {ModelsPetType}
     * @memberof ModelsPet
     */
    type?: ModelsPetType;
    /**
     * 
     * @type {string}
     * @memberof ModelsPet
     */
    vaccinationDate?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsPet
     */
    weightKg?: number;
}



/**
 * Check if a given object implements the ModelsPet interface.
 */
export function instanceOfModelsPet(value: object): value is ModelsPet {
    return true;
}

export function ModelsPetFromJSON(json: any): ModelsPet {
    return ModelsPetFromJSONTyped(json, false);
}

export function ModelsPetFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsPet {
    if (json == null) {
        return json;
    }
    return {
        
        'ageMonths': json['ageMonths'] == null ? undefined : json['ageMonths'],
        'ageYears': json['ageYears'] == null ? undefined : json['ageYears'],
        'bloodGroup': json['bloodGroup'] == null ? undefined : json['bloodGroup'],
        'breed': json['breed'] == null ? undefined : json['breed'],
        'chipNumber': json['chipNumber'] == null ? undefined : json['chipNumber'],
        'dewormingDate': json['dewormingDate'] == null ? undefined : json['dewormingDate'],
        'ectoparasiteDate': json['ectoparasiteDate'] == null ? undefined : json['ectoparasiteDate'],
        'gender': json['gender'] == null ? undefined : ModelsGenderFromJSON(json['gender']),
        'hasChip': json['hasChip'] == null ? undefined : json['hasChip'],
        'id': json['id'] == null ? undefined : json['id'],
        'isGuideDog': json['isGuideDog'] == null ? undefined : json['isGuideDog'],
        'isTherapist': json['isTherapist'] == null ? undefined : json['isTherapist'],
        'knowsBloodGroup': json['knowsBloodGroup'] == null ? undefined : json['knowsBloodGroup'],
        'lastTransfusionDate': json['lastTransfusionDate'] == null ? undefined : json['lastTransfusionDate'],
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'livingCondition': json['livingCondition'] == null ? undefined : ModelsLivingConditionFromJSON(json['livingCondition']),
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'name': json['name'] == null ? undefined : json['name'],
        'ownerId': json['ownerId'] == null ? undefined : json['ownerId'],
        'photoUrl': json['photoUrl'] == null ? undefined : json['photoUrl'],
        'sterilized': json['sterilized'] == null ? undefined : json['sterilized'],
        'type': json['type'] == null ? undefined : ModelsPetTypeFromJSON(json['type']),
        'vaccinationDate': json['vaccinationDate'] == null ? undefined : json['vaccinationDate'],
        'weightKg': json['weightKg'] == null ? undefined : json['weightKg'],
    };
}

export function ModelsPetToJSON(json: any): ModelsPet {
    return ModelsPetToJSONTyped(json, false);
}

export function ModelsPetToJSONTyped(value?: ModelsPet | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'ageMonths': value['ageMonths'],
        'ageYears': value['ageYears'],
        'bloodGroup': value['bloodGroup'],
        'breed': value['breed'],
        'chipNumber': value['chipNumber'],
        'dewormingDate': value['dewormingDate'],
        'ectoparasiteDate': value['ectoparasiteDate'],
        'gender': ModelsGenderToJSON(value['gender']),
        'hasChip': value['hasChip'],
        'id': value['id'],
        'isGuideDog': value['isGuideDog'],
        'isTherapist': value['isTherapist'],
        'knowsBloodGroup': value['knowsBloodGroup'],
        'lastTransfusionDate': value['lastTransfusionDate'],
        'latitude': value['latitude'],
        'livingCondition': ModelsLivingConditionToJSON(value['livingCondition']),
        'longitude': value['longitude'],
        'name': value['name'],
        'ownerId': value['ownerId'],
        'photoUrl': value['photoUrl'],
        'sterilized': value['sterilized'],
        'type': ModelsPetTypeToJSON(value['type']),
        'vaccinationDate': value['vaccinationDate'],
        'weightKg': value['weightKg'],
    };
}


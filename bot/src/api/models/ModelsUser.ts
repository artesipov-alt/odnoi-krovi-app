/* tslint:disable */
/* eslint-disable */
/**
 * однойкрови.рф
 * API сервиса однойкрови.рф для донороcства крови и помощи животным
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsUserRole } from './ModelsUserRole';
import {
    ModelsUserRoleFromJSON,
    ModelsUserRoleFromJSONTyped,
    ModelsUserRoleToJSON,
    ModelsUserRoleToJSONTyped,
} from './ModelsUserRole';

/**
 * 
 * @export
 * @interface ModelsUser
 */
export interface ModelsUser {
    /**
     * 
     * @type {boolean}
     * @memberof ModelsUser
     */
    allowGeo?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsUser
     */
    consentPd?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModelsUser
     */
    createdAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUser
     */
    email?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUser
     */
    fullName?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsUser
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsUser
     */
    locationId?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ModelsUser
     */
    onBoarding?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ModelsUser
     */
    organizationName?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsUser
     */
    phone?: string;
    /**
     * 
     * @type {ModelsUserRole}
     * @memberof ModelsUser
     */
    role?: ModelsUserRole;
    /**
     * 
     * @type {number}
     * @memberof ModelsUser
     */
    telegramId?: number;
}



/**
 * Check if a given object implements the ModelsUser interface.
 */
export function instanceOfModelsUser(value: object): value is ModelsUser {
    return true;
}

export function ModelsUserFromJSON(json: any): ModelsUser {
    return ModelsUserFromJSONTyped(json, false);
}

export function ModelsUserFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsUser {
    if (json == null) {
        return json;
    }
    return {
        
        'allowGeo': json['allowGeo'] == null ? undefined : json['allowGeo'],
        'consentPd': json['consentPd'] == null ? undefined : json['consentPd'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'email': json['email'] == null ? undefined : json['email'],
        'fullName': json['fullName'] == null ? undefined : json['fullName'],
        'id': json['id'] == null ? undefined : json['id'],
        'locationId': json['locationId'] == null ? undefined : json['locationId'],
        'onBoarding': json['onBoarding'] == null ? undefined : json['onBoarding'],
        'organizationName': json['organizationName'] == null ? undefined : json['organizationName'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'role': json['role'] == null ? undefined : ModelsUserRoleFromJSON(json['role']),
        'telegramId': json['telegramId'] == null ? undefined : json['telegramId'],
    };
}

export function ModelsUserToJSON(json: any): ModelsUser {
    return ModelsUserToJSONTyped(json, false);
}

export function ModelsUserToJSONTyped(value?: ModelsUser | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'allowGeo': value['allowGeo'],
        'consentPd': value['consentPd'],
        'createdAt': value['createdAt'],
        'email': value['email'],
        'fullName': value['fullName'],
        'id': value['id'],
        'locationId': value['locationId'],
        'onBoarding': value['onBoarding'],
        'organizationName': value['organizationName'],
        'phone': value['phone'],
        'role': ModelsUserRoleToJSON(value['role']),
        'telegramId': value['telegramId'],
    };
}


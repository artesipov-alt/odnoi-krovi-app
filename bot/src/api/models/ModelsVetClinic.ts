/* tslint:disable */
/* eslint-disable */
/**
 * однойкрови.рф
 * API сервиса однойкрови.рф для донороcства крови и помощи животным
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsDonorRequirements } from './ModelsDonorRequirements';
import {
    ModelsDonorRequirementsFromJSON,
    ModelsDonorRequirementsFromJSONTyped,
    ModelsDonorRequirementsToJSON,
    ModelsDonorRequirementsToJSONTyped,
} from './ModelsDonorRequirements';

/**
 * 
 * @export
 * @interface ModelsVetClinic
 */
export interface ModelsVetClinic {
    /**
     * 
     * @type {number}
     * @memberof ModelsVetClinic
     */
    appointmentRequirementId?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsVetClinic
     */
    clinicId?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsVetClinic
     */
    contactPersonName?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsVetClinic
     */
    contactPersonPosition?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsVetClinic
     */
    donorBonusPrograms?: string;
    /**
     * 
     * @type {ModelsDonorRequirements}
     * @memberof ModelsVetClinic
     */
    donorRequirements?: ModelsDonorRequirements;
    /**
     * 
     * @type {number}
     * @memberof ModelsVetClinic
     */
    latitude?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsVetClinic
     */
    locationId?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsVetClinic
     */
    longitude?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsVetClinic
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsVetClinic
     */
    phone?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsVetClinic
     */
    transfusionConditions?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsVetClinic
     */
    website?: string;
    /**
     * 
     * @type {string}
     * @memberof ModelsVetClinic
     */
    workHours?: string;
}

/**
 * Check if a given object implements the ModelsVetClinic interface.
 */
export function instanceOfModelsVetClinic(value: object): value is ModelsVetClinic {
    return true;
}

export function ModelsVetClinicFromJSON(json: any): ModelsVetClinic {
    return ModelsVetClinicFromJSONTyped(json, false);
}

export function ModelsVetClinicFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsVetClinic {
    if (json == null) {
        return json;
    }
    return {
        
        'appointmentRequirementId': json['appointmentRequirementId'] == null ? undefined : json['appointmentRequirementId'],
        'clinicId': json['clinicId'] == null ? undefined : json['clinicId'],
        'contactPersonName': json['contactPersonName'] == null ? undefined : json['contactPersonName'],
        'contactPersonPosition': json['contactPersonPosition'] == null ? undefined : json['contactPersonPosition'],
        'donorBonusPrograms': json['donorBonusPrograms'] == null ? undefined : json['donorBonusPrograms'],
        'donorRequirements': json['donorRequirements'] == null ? undefined : ModelsDonorRequirementsFromJSON(json['donorRequirements']),
        'latitude': json['latitude'] == null ? undefined : json['latitude'],
        'locationId': json['locationId'] == null ? undefined : json['locationId'],
        'longitude': json['longitude'] == null ? undefined : json['longitude'],
        'name': json['name'] == null ? undefined : json['name'],
        'phone': json['phone'] == null ? undefined : json['phone'],
        'transfusionConditions': json['transfusionConditions'] == null ? undefined : json['transfusionConditions'],
        'website': json['website'] == null ? undefined : json['website'],
        'workHours': json['workHours'] == null ? undefined : json['workHours'],
    };
}

export function ModelsVetClinicToJSON(json: any): ModelsVetClinic {
    return ModelsVetClinicToJSONTyped(json, false);
}

export function ModelsVetClinicToJSONTyped(value?: ModelsVetClinic | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'appointmentRequirementId': value['appointmentRequirementId'],
        'clinicId': value['clinicId'],
        'contactPersonName': value['contactPersonName'],
        'contactPersonPosition': value['contactPersonPosition'],
        'donorBonusPrograms': value['donorBonusPrograms'],
        'donorRequirements': ModelsDonorRequirementsToJSON(value['donorRequirements']),
        'latitude': value['latitude'],
        'locationId': value['locationId'],
        'longitude': value['longitude'],
        'name': value['name'],
        'phone': value['phone'],
        'transfusionConditions': value['transfusionConditions'],
        'website': value['website'],
        'workHours': value['workHours'],
    };
}


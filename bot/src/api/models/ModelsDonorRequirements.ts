/* tslint:disable */
/* eslint-disable */
/**
 * однойкрови.рф
 * API сервиса однойкрови.рф для донороcства крови и помощи животным
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelsDonorRequirements
 */
export interface ModelsDonorRequirements {
    /**
     * 
     * @type {Array<string>}
     * @memberof ModelsDonorRequirements
     */
    bloodTypes?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModelsDonorRequirements
     */
    healthConditions?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof ModelsDonorRequirements
     */
    maxAge?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsDonorRequirements
     */
    minAge?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsDonorRequirements
     */
    minWeight?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ModelsDonorRequirements
     */
    vaccinations?: Array<string>;
}

/**
 * Check if a given object implements the ModelsDonorRequirements interface.
 */
export function instanceOfModelsDonorRequirements(value: object): value is ModelsDonorRequirements {
    return true;
}

export function ModelsDonorRequirementsFromJSON(json: any): ModelsDonorRequirements {
    return ModelsDonorRequirementsFromJSONTyped(json, false);
}

export function ModelsDonorRequirementsFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsDonorRequirements {
    if (json == null) {
        return json;
    }
    return {
        
        'bloodTypes': json['bloodTypes'] == null ? undefined : json['bloodTypes'],
        'healthConditions': json['healthConditions'] == null ? undefined : json['healthConditions'],
        'maxAge': json['maxAge'] == null ? undefined : json['maxAge'],
        'minAge': json['minAge'] == null ? undefined : json['minAge'],
        'minWeight': json['minWeight'] == null ? undefined : json['minWeight'],
        'vaccinations': json['vaccinations'] == null ? undefined : json['vaccinations'],
    };
}

export function ModelsDonorRequirementsToJSON(json: any): ModelsDonorRequirements {
    return ModelsDonorRequirementsToJSONTyped(json, false);
}

export function ModelsDonorRequirementsToJSONTyped(value?: ModelsDonorRequirements | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bloodTypes': value['bloodTypes'],
        'healthConditions': value['healthConditions'],
        'maxAge': value['maxAge'],
        'minAge': value['minAge'],
        'minWeight': value['minWeight'],
        'vaccinations': value['vaccinations'],
    };
}


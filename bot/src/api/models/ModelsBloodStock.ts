/* tslint:disable */
/* eslint-disable */
/**
 * однойкрови.рф
 * API сервиса однойкрови.рф для донороcства крови и помощи животным
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsBloodStockStatus } from './ModelsBloodStockStatus';
import {
    ModelsBloodStockStatusFromJSON,
    ModelsBloodStockStatusFromJSONTyped,
    ModelsBloodStockStatusToJSON,
    ModelsBloodStockStatusToJSONTyped,
} from './ModelsBloodStockStatus';
import type { ModelsPetType } from './ModelsPetType';
import {
    ModelsPetTypeFromJSON,
    ModelsPetTypeFromJSONTyped,
    ModelsPetTypeToJSON,
    ModelsPetTypeToJSONTyped,
} from './ModelsPetType';

/**
 * 
 * @export
 * @interface ModelsBloodStock
 */
export interface ModelsBloodStock {
    /**
     * 
     * @type {number}
     * @memberof ModelsBloodStock
     */
    bloodTypeId?: number;
    /**
     * 
     * @type {number}
     * @memberof ModelsBloodStock
     */
    clinicId?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelsBloodStock
     */
    expirationDate?: string;
    /**
     * 
     * @type {number}
     * @memberof ModelsBloodStock
     */
    id?: number;
    /**
     * 
     * @type {ModelsPetType}
     * @memberof ModelsBloodStock
     */
    petType?: ModelsPetType;
    /**
     * 
     * @type {number}
     * @memberof ModelsBloodStock
     */
    priceRub?: number;
    /**
     * 
     * @type {ModelsBloodStockStatus}
     * @memberof ModelsBloodStock
     */
    status?: ModelsBloodStockStatus;
    /**
     * 
     * @type {number}
     * @memberof ModelsBloodStock
     */
    volumeMl?: number;
}



/**
 * Check if a given object implements the ModelsBloodStock interface.
 */
export function instanceOfModelsBloodStock(value: object): value is ModelsBloodStock {
    return true;
}

export function ModelsBloodStockFromJSON(json: any): ModelsBloodStock {
    return ModelsBloodStockFromJSONTyped(json, false);
}

export function ModelsBloodStockFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsBloodStock {
    if (json == null) {
        return json;
    }
    return {
        
        'bloodTypeId': json['bloodTypeId'] == null ? undefined : json['bloodTypeId'],
        'clinicId': json['clinicId'] == null ? undefined : json['clinicId'],
        'expirationDate': json['expirationDate'] == null ? undefined : json['expirationDate'],
        'id': json['id'] == null ? undefined : json['id'],
        'petType': json['petType'] == null ? undefined : ModelsPetTypeFromJSON(json['petType']),
        'priceRub': json['priceRub'] == null ? undefined : json['priceRub'],
        'status': json['status'] == null ? undefined : ModelsBloodStockStatusFromJSON(json['status']),
        'volumeMl': json['volumeMl'] == null ? undefined : json['volumeMl'],
    };
}

export function ModelsBloodStockToJSON(json: any): ModelsBloodStock {
    return ModelsBloodStockToJSONTyped(json, false);
}

export function ModelsBloodStockToJSONTyped(value?: ModelsBloodStock | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'bloodTypeId': value['bloodTypeId'],
        'clinicId': value['clinicId'],
        'expirationDate': value['expirationDate'],
        'id': value['id'],
        'petType': ModelsPetTypeToJSON(value['petType']),
        'priceRub': value['priceRub'],
        'status': ModelsBloodStockStatusToJSON(value['status']),
        'volumeMl': value['volumeMl'],
    };
}

